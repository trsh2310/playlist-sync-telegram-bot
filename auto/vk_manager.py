import requests

from api_clients.vk import VKMusic
from config import VK_REDIRECT_URI, VK_APP_ID
from models import Database
from search_and_sync import SearchAndSync


class VKPlaylistManager:
    def __init__(self):
        self.db = Database()

    def get_auth_url(self, platform):
        if platform == "vk":
            app_id = VK_APP_ID
            redirect_uri = VK_REDIRECT_URI
            scope = "audio,offline"
            auth_url = (f"https://oauth.vk.com/authorize?client_id={app_id}&display=page"
                        f"&redirect_uri={redirect_uri}&scope={scope}&response_type=token&v=5.131")
            return auth_url
        raise ValueError("Unknown platform")

    def save_token(self, platform, user_id, token_url):
        if platform != "vk":
            return "Platform not supported"

        token_data = dict(pair.split("=") for pair in token_url.split("#")[1].split("&"))
        access_token = token_data.get("access_token")
        self.db.save_token(user_id, platform, access_token)
        if not access_token:
            return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞"

        response = requests.get("https://api.vk.com/method/users.get", params={
            "access_token": access_token,
            "v": "5.131"
        })
        if response.status_code == 200 and "response" in response.json():
            user_info = response.json()["response"][0]
            return (f"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! \n"
                    f"–ü—Ä–∏–≤–µ—Ç, {user_info['first_name']} {user_info['last_name']}! üéâ\n"
                    f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å.")
        else:
            return "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"

    def fetch_playlist(self, platform, user_id, playlist_url):
        token = self.db.get_token(user_id, platform)
        if not token:
            return "–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é."

        if platform == 'vk':
            client = VKMusic(token)
            tracks = client.fetch_playlist(playlist_url)
            return f"–ù–∞–π–¥–µ–Ω–æ {len(tracks)} —Ç—Ä–µ–∫–æ–≤."
        return "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è."

    def sync_playlist(self, platform, user_id):
        token = self.db.get_token(user_id, platform)
        if not token:
            return "–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é."

        if platform == 'vk':
            client = VKMusic(token)
            tracks = self.db.get_tracks(user_id, platform)
            track_ids = SearchAndSync.search_tracks(client, tracks)
            playlist = client.create_playlist("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–µ–π–ª–∏—Å—Ç", "–°–æ–∑–¥–∞–Ω –±–æ—Ç–æ–º")
            client.add_tracks_to_playlist(playlist['id'], playlist['owner_id'], track_ids)
            return "–ü–ª–µ–π–ª–∏—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω!"
        return "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è."